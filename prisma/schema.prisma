datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  id              String            @id
  name            String
  email           String[]            @unique 
  createdAt       DateTime @default(now())
  meals           Meal[]
  workouts        Workout[]
  weightLogs      WeightLog[]
  medicationLogs  MedicationLog[]
  tenants         UsersOfTenants[]         
}

model Tenant {
  id               String           @id
  name             String   
  createdAt        DateTime @default(now())
  users            UsersOfTenants[]
  meals            Meal[]
  workouts         Workout[]
  weightLogs       WeightLog[]
  medicationLogs   MedicationLog[]     
}

model UsersOfTenants {
  user        User @relation(fields: [userId], references: [id])
  userId      String
  tenant      Tenant @relation(fields: [tenantId], references: [id])
  tenantId    String
  createdAt   DateTime @default(now())
  role        Role
  @@id([userId, tenantId])
}


model Meal {
  id                      String   @id @default(cuid())
  name                    String
  description             String
  date                    DateTime
  weight                  Float
  sugar_g                 Float
  fiber_g                 Float
  carbohydrates_total_g   Float
  cholesterol_mg          Float
  potassium_mg            Float
  sodium_mg               Float
  fat_saturated_g         Float
  fat_total_g             Float
  userId                  String
  user                    User     @relation(fields: [userId], references: [id])
  tenantId                String
  tenant                  Tenant   @relation(fields: [tenantId], references: [id])
}

model Workout {
  id        String   @id @default(cuid())
  type      String
  duration  Int
  date      DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
}

model WeightLog {
  id        String   @id @default(cuid())
  weight    Float
  date      DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
}

model MedicationLog {
  id        String   @id @default(cuid())
  name      String
  date      DateTime
  taken     Boolean
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tenantId                String
  tenant                  Tenant   @relation(fields: [tenantId], references: [id])
}

enum Role {
  Admin
  Member
}